`timescale 10ns/1ns
/*
module verilog test_bench for i2c slave
*/
module i2c_slave_testbench();

	reg i2c_rst_slv, sda, scl, clk; 

	i2c_slave     #(7'h7e)  i2c_slave_instance(
							.reset_n(i2c_rst_slv),
							.sda(sda),
							.scl(scl),
							.clock(clk)
							);
							
	initial begin
	#0 clk = 0;
	#0	i2c_rst_slv = 1;
	end

	always
		#5 clk = !clk;
		
	initial begin
	#1 i2c_rst_slv = 0;
	end

	initial begin
	/* start condition */
	#2 scl=1;
	#3 scl=0;
	#3 sda=1;
	/*1st bit*/
	#4 scl=1;
	#5 scl=0;
	#5 sda=1;
	/*2nd bit*/
	#6 scl=1;
	#7 scl=0;
	#7 sda=1;
	/*3rd bit*/
	#8 scl=1;
	#9 scl=0;
	#9 sda=1;
	/*4th bit*/
	#10 scl=1;
	#11 scl=0;
	#11 sda=1;
	/*5th bit*/
	#12 scl=1;
	#13 scl=0;
	#13 sda=1;
	/*6th bit*/
	#14 scl=1;
	#15 scl=0;
	#15 sda=1;
	/*7th bit*/
	#16 scl=1;
	#17 scl=0;
	#17 sda=1;
	/*8th bit*/
	#18 scl=1;
	#19 scl=0;
	#19 sda=0; //read
	/*ack bit*/
	#10 scl=1;
	#11 scl=0;
	end

endmodule

