|top
clk => clk.IN6
rst_n => rst_n.IN3
rs232_rx => rs232_rx.IN1
BusA[56] <> BusA[56]
BusA[57] <> BusA[57]
BusA[58] <> BusA[58]
BusA[59] <> <UNC>
BusA[60] <> <UNC>
BusA[61] <> BusA[61]
BusB[76] <> BusB[76]
BusB[77] <> BusB[77]
BusB[78] <> <UNC>
BusB[79] <> <UNC>
BusB[80] <> <UNC>
BusB[81] <> <UNC>
BusB[82] <> BusB[82]
BusB[82] <> BusB[82]
BusB[83] <> <UNC>
BusB[85] <> <UNC>
BusC[95] <> I2C_MASTER_reduced:I2C_MASTER_reduced_instance.receive_status
BusC[96] <> <UNC>
BusC[97] <> i2c_slave_reduced:i2c_slave_reduced_instance.sda
BusC[97] <> I2C_MASTER_reduced:I2C_MASTER_reduced_instance.sda
BusC[98] <> <UNC>
BusC[99] <> BusC[99]
BusC[99] <> BusC[99]
led << led~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|speed_select:speed_select
clk => buad_clk_tx_reg.CLK
clk => cnt_tx[0].CLK
clk => cnt_tx[1].CLK
clk => cnt_tx[2].CLK
clk => cnt_tx[3].CLK
clk => cnt_tx[4].CLK
clk => cnt_tx[5].CLK
clk => cnt_tx[6].CLK
clk => cnt_tx[7].CLK
clk => cnt_tx[8].CLK
clk => cnt_tx[9].CLK
clk => cnt_tx[10].CLK
clk => cnt_tx[11].CLK
clk => cnt_tx[12].CLK
clk => buad_clk_rx_reg.CLK
clk => cnt_rx[0].CLK
clk => cnt_rx[1].CLK
clk => cnt_rx[2].CLK
clk => cnt_rx[3].CLK
clk => cnt_rx[4].CLK
clk => cnt_rx[5].CLK
clk => cnt_rx[6].CLK
clk => cnt_rx[7].CLK
clk => cnt_rx[8].CLK
clk => cnt_rx[9].CLK
clk => cnt_rx[10].CLK
clk => cnt_rx[11].CLK
clk => cnt_rx[12].CLK
clk => bps_para_2[0].CLK
clk => bps_para_2[1].CLK
clk => bps_para_2[2].CLK
clk => bps_para_2[3].CLK
clk => bps_para_2[4].CLK
clk => bps_para_2[5].CLK
clk => bps_para_2[6].CLK
clk => bps_para_2[7].CLK
clk => bps_para_2[8].CLK
clk => bps_para_2[9].CLK
clk => bps_para_2[10].CLK
clk => bps_para_2[11].CLK
clk => bps_para_2[12].CLK
clk => bps_para[0].CLK
clk => bps_para[1].CLK
clk => bps_para[2].CLK
clk => bps_para[3].CLK
clk => bps_para[4].CLK
clk => bps_para[5].CLK
clk => bps_para[6].CLK
clk => bps_para[7].CLK
clk => bps_para[8].CLK
clk => bps_para[9].CLK
clk => bps_para[10].CLK
clk => bps_para[11].CLK
clk => bps_para[12].CLK
rst_n => buad_clk_rx_reg.ACLR
rst_n => buad_clk_tx_reg.ACLR
rst_n => cnt_rx[0].ACLR
rst_n => cnt_rx[1].ACLR
rst_n => cnt_rx[2].ACLR
rst_n => cnt_rx[3].ACLR
rst_n => cnt_rx[4].ACLR
rst_n => cnt_rx[5].ACLR
rst_n => cnt_rx[6].ACLR
rst_n => cnt_rx[7].ACLR
rst_n => cnt_rx[8].ACLR
rst_n => cnt_rx[9].ACLR
rst_n => cnt_rx[10].ACLR
rst_n => cnt_rx[11].ACLR
rst_n => cnt_rx[12].ACLR
rst_n => cnt_tx[0].ACLR
rst_n => cnt_tx[1].ACLR
rst_n => cnt_tx[2].ACLR
rst_n => cnt_tx[3].ACLR
rst_n => cnt_tx[4].ACLR
rst_n => cnt_tx[5].ACLR
rst_n => cnt_tx[6].ACLR
rst_n => cnt_tx[7].ACLR
rst_n => cnt_tx[8].ACLR
rst_n => cnt_tx[9].ACLR
rst_n => cnt_tx[10].ACLR
rst_n => cnt_tx[11].ACLR
rst_n => cnt_tx[12].ACLR
rst_n => bps_para[12].ENA
rst_n => bps_para[11].ENA
rst_n => bps_para[10].ENA
rst_n => bps_para[9].ENA
rst_n => bps_para[8].ENA
rst_n => bps_para[7].ENA
rst_n => bps_para[6].ENA
rst_n => bps_para[5].ENA
rst_n => bps_para[4].ENA
rst_n => bps_para[3].ENA
rst_n => bps_para[2].ENA
rst_n => bps_para[1].ENA
rst_n => bps_para[0].ENA
rst_n => bps_para_2[12].ENA
rst_n => bps_para_2[11].ENA
rst_n => bps_para_2[10].ENA
rst_n => bps_para_2[9].ENA
rst_n => bps_para_2[8].ENA
rst_n => bps_para_2[7].ENA
rst_n => bps_para_2[6].ENA
rst_n => bps_para_2[5].ENA
rst_n => bps_para_2[4].ENA
rst_n => bps_para_2[3].ENA
rst_n => bps_para_2[2].ENA
rst_n => bps_para_2[1].ENA
rst_n => bps_para_2[0].ENA
rx_enable => always1.IN1
rx_enable => always2.IN1
tx_enable => always3.IN1
tx_enable => always4.IN1
buad_clk_rx <= buad_clk_rx_reg.DB_MAX_OUTPUT_PORT_TYPE
buad_clk_tx <= buad_clk_tx_reg.DB_MAX_OUTPUT_PORT_TYPE


|top|my_uart_rx:my_uart_rx
rst_n => rx_data_reg[0].ACLR
rst_n => rx_data_reg[1].ACLR
rst_n => rx_data_reg[2].ACLR
rst_n => rx_data_reg[3].ACLR
rst_n => rx_data_reg[4].ACLR
rst_n => rx_data_reg[5].ACLR
rst_n => rx_data_reg[6].ACLR
rst_n => rx_data_reg[7].ACLR
rst_n => rx_complete_reg.IN1
rst_n => rx_enable_reg.IN1
rst_n => rx_data_temp[0].ACLR
rst_n => rx_data_temp[1].ACLR
rst_n => rx_data_temp[2].ACLR
rst_n => rx_data_temp[3].ACLR
rst_n => rx_data_temp[4].ACLR
rst_n => rx_data_temp[5].ACLR
rst_n => rx_data_temp[6].ACLR
rst_n => rx_data_temp[7].ACLR
rst_n => rx_error_reg.ACLR
rst_n => rx_count[0].ACLR
rst_n => rx_count[1].ACLR
rst_n => rx_count[2].ACLR
rst_n => rx_count[3].ACLR
baud_clk => rx_count[0].CLK
baud_clk => rx_count[1].CLK
baud_clk => rx_count[2].CLK
baud_clk => rx_count[3].CLK
baud_clk => rx_data_reg[0].CLK
baud_clk => rx_data_reg[1].CLK
baud_clk => rx_data_reg[2].CLK
baud_clk => rx_data_reg[3].CLK
baud_clk => rx_data_reg[4].CLK
baud_clk => rx_data_reg[5].CLK
baud_clk => rx_data_reg[6].CLK
baud_clk => rx_data_reg[7].CLK
baud_clk => rx_complete_reg.CLK
baud_clk => rx_data_temp[0].CLK
baud_clk => rx_data_temp[1].CLK
baud_clk => rx_data_temp[2].CLK
baud_clk => rx_data_temp[3].CLK
baud_clk => rx_data_temp[4].CLK
baud_clk => rx_data_temp[5].CLK
baud_clk => rx_data_temp[6].CLK
baud_clk => rx_data_temp[7].CLK
baud_clk => rx_error_reg.CLK
uart_rx => rx_error_reg.OUTPUTSELECT
uart_rx => Mux4.IN1
uart_rx => Mux5.IN1
uart_rx => Mux6.IN1
uart_rx => Mux7.IN1
uart_rx => Mux8.IN1
uart_rx => Mux9.IN1
uart_rx => Mux10.IN1
uart_rx => Mux11.IN1
uart_rx => rx_error_reg.OUTPUTSELECT
uart_rx => rx_enable_reg.CLK
rx_data[0] <= rx_data_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data_reg[7].DB_MAX_OUTPUT_PORT_TYPE
rx_enable <= rx_enable_reg.DB_MAX_OUTPUT_PORT_TYPE
rx_complete <= rx_complete_reg.DB_MAX_OUTPUT_PORT_TYPE
rx_error <= rx_error_reg.DB_MAX_OUTPUT_PORT_TYPE


|top|my_uart_tx:my_uart_tx
rst_n => tx_data_reg[0]~en.ACLR
rst_n => tx_data_reg[1]~en.ACLR
rst_n => tx_data_reg[2]~en.ACLR
rst_n => tx_data_reg[3]~en.ACLR
rst_n => tx_data_reg[4]~en.ACLR
rst_n => tx_data_reg[5]~en.ACLR
rst_n => tx_data_reg[6]~en.ACLR
rst_n => tx_data_reg[7]~en.ACLR
rst_n => uart_tx_reg~en.ACLR
rst_n => tx_enable_reg.IN1
rst_n => tx_complete_reg.IN1
rst_n => tx_count[0].ACLR
rst_n => tx_count[1].ACLR
rst_n => tx_count[2].ACLR
rst_n => tx_count[3].ACLR
baud_clk => tx_count[0].CLK
baud_clk => tx_count[1].CLK
baud_clk => tx_count[2].CLK
baud_clk => tx_count[3].CLK
baud_clk => tx_data_reg[0].CLK
baud_clk => tx_data_reg[0]~en.CLK
baud_clk => tx_data_reg[1].CLK
baud_clk => tx_data_reg[1]~en.CLK
baud_clk => tx_data_reg[2].CLK
baud_clk => tx_data_reg[2]~en.CLK
baud_clk => tx_data_reg[3].CLK
baud_clk => tx_data_reg[3]~en.CLK
baud_clk => tx_data_reg[4].CLK
baud_clk => tx_data_reg[4]~en.CLK
baud_clk => tx_data_reg[5].CLK
baud_clk => tx_data_reg[5]~en.CLK
baud_clk => tx_data_reg[6].CLK
baud_clk => tx_data_reg[6]~en.CLK
baud_clk => tx_data_reg[7].CLK
baud_clk => tx_data_reg[7]~en.CLK
baud_clk => uart_tx_reg.CLK
baud_clk => uart_tx_reg~en.CLK
baud_clk => tx_complete_reg.CLK
tx_start => tx_enable_reg.CLK
tx_data[0] => tx_data_reg[0].DATAIN
tx_data[1] => tx_data_reg[1].DATAIN
tx_data[2] => tx_data_reg[2].DATAIN
tx_data[3] => tx_data_reg[3].DATAIN
tx_data[4] => tx_data_reg[4].DATAIN
tx_data[5] => tx_data_reg[5].DATAIN
tx_data[6] => tx_data_reg[6].DATAIN
tx_data[7] => tx_data_reg[7].DATAIN
tx_enable <= tx_enable_reg.DB_MAX_OUTPUT_PORT_TYPE
tx_complete <= tx_complete_reg.DB_MAX_OUTPUT_PORT_TYPE
uart_tx <= uart_tx_reg.DB_MAX_OUTPUT_PORT_TYPE
error <= <GND>


|top|spi_slave_b2b_reduced:spi_slave_b2b_instance_reduced
clk => last_byte_data_sent[0].CLK
clk => last_byte_data_sent[1].CLK
clk => last_byte_data_sent[2].CLK
clk => last_byte_data_sent[3].CLK
clk => last_byte_data_sent[4].CLK
clk => last_byte_data_sent[5].CLK
clk => last_byte_data_sent[6].CLK
clk => last_byte_data_sent[7].CLK
clk => byte_data_sent[0].CLK
clk => byte_data_sent[1].CLK
clk => byte_data_sent[2].CLK
clk => byte_data_sent[3].CLK
clk => byte_data_sent[4].CLK
clk => byte_data_sent[5].CLK
clk => byte_data_sent[6].CLK
clk => byte_data_sent[7].CLK
clk => sselr.CLK
clk => last.CLK
clk => curr.CLK
sck => curr.DATAA
mosi => ~NO_FANOUT~
miso <= byte_data_sent[7].DB_MAX_OUTPUT_PORT_TYPE
ssel => sselr.DATAIN
rst_n => last_byte_data_sent[0].ACLR
rst_n => last_byte_data_sent[1].ACLR
rst_n => last_byte_data_sent[2].ACLR
rst_n => last_byte_data_sent[3].ACLR
rst_n => last_byte_data_sent[4].ACLR
rst_n => last_byte_data_sent[5].ACLR
rst_n => last_byte_data_sent[6].ACLR
rst_n => last_byte_data_sent[7].ACLR
rst_n => byte_data_sent[0].ACLR
rst_n => byte_data_sent[1].ACLR
rst_n => byte_data_sent[2].ACLR
rst_n => byte_data_sent[3].ACLR
rst_n => byte_data_sent[4].ACLR
rst_n => byte_data_sent[5].ACLR
rst_n => byte_data_sent[6].ACLR
rst_n => byte_data_sent[7].ACLR
rst_n => curr.OUTPUTSELECT
rst_n => last.OUTPUTSELECT
rst_n => sselr.PRESET
recived_status <= <GND>


|top|pwm_out:pwm_out
rst_n => count_reg[0].ACLR
rst_n => count_reg[1].ACLR
rst_n => count_reg[2].ACLR
rst_n => count_reg[3].ACLR
rst_n => count_reg[4].ACLR
rst_n => count_reg[5].ACLR
rst_n => count_reg[6].ACLR
rst_n => count_reg[7].ACLR
rst_n => count_reg[8].ACLR
rst_n => count_reg[9].ACLR
rst_n => count_reg[10].ACLR
rst_n => count_reg[11].ACLR
rst_n => count_reg[12].ACLR
rst_n => count_reg[13].ACLR
rst_n => count_reg[14].ACLR
rst_n => count_reg[15].ACLR
rst_n => count_reg[16].ACLR
rst_n => count_reg[17].ACLR
rst_n => count_reg[18].ACLR
rst_n => count_reg[19].ACLR
rst_n => count_reg[20].ACLR
rst_n => count_reg[21].ACLR
rst_n => count_reg[22].ACLR
rst_n => count_reg[23].ACLR
rst_n => count_reg[24].ACLR
rst_n => count_reg[25].ACLR
rst_n => count_reg[26].ACLR
rst_n => count_reg[27].ACLR
rst_n => count_reg[28].ACLR
rst_n => count_reg[29].ACLR
rst_n => count_reg[30].ACLR
rst_n => count_reg[31].ACLR
rst_n => pwm_reg.ACLR
clk => pwm_reg.CLK
clk => count_reg[0].CLK
clk => count_reg[1].CLK
clk => count_reg[2].CLK
clk => count_reg[3].CLK
clk => count_reg[4].CLK
clk => count_reg[5].CLK
clk => count_reg[6].CLK
clk => count_reg[7].CLK
clk => count_reg[8].CLK
clk => count_reg[9].CLK
clk => count_reg[10].CLK
clk => count_reg[11].CLK
clk => count_reg[12].CLK
clk => count_reg[13].CLK
clk => count_reg[14].CLK
clk => count_reg[15].CLK
clk => count_reg[16].CLK
clk => count_reg[17].CLK
clk => count_reg[18].CLK
clk => count_reg[19].CLK
clk => count_reg[20].CLK
clk => count_reg[21].CLK
clk => count_reg[22].CLK
clk => count_reg[23].CLK
clk => count_reg[24].CLK
clk => count_reg[25].CLK
clk => count_reg[26].CLK
clk => count_reg[27].CLK
clk => count_reg[28].CLK
clk => count_reg[29].CLK
clk => count_reg[30].CLK
clk => count_reg[31].CLK
enable => pwm_reg.ENA
enable => count_reg[31].ENA
enable => count_reg[30].ENA
enable => count_reg[29].ENA
enable => count_reg[28].ENA
enable => count_reg[27].ENA
enable => count_reg[26].ENA
enable => count_reg[25].ENA
enable => count_reg[24].ENA
enable => count_reg[23].ENA
enable => count_reg[22].ENA
enable => count_reg[21].ENA
enable => count_reg[20].ENA
enable => count_reg[19].ENA
enable => count_reg[18].ENA
enable => count_reg[17].ENA
enable => count_reg[16].ENA
enable => count_reg[15].ENA
enable => count_reg[14].ENA
enable => count_reg[13].ENA
enable => count_reg[12].ENA
enable => count_reg[11].ENA
enable => count_reg[10].ENA
enable => count_reg[9].ENA
enable => count_reg[8].ENA
enable => count_reg[7].ENA
enable => count_reg[6].ENA
enable => count_reg[5].ENA
enable => count_reg[4].ENA
enable => count_reg[3].ENA
enable => count_reg[2].ENA
enable => count_reg[1].ENA
enable => count_reg[0].ENA
pha <= pwm_reg.DB_MAX_OUTPUT_PORT_TYPE
phb <= pwm_reg.DB_MAX_OUTPUT_PORT_TYPE
pwmfre[0] => LessThan0.IN32
pwmfre[1] => LessThan0.IN31
pwmfre[2] => LessThan0.IN30
pwmfre[3] => LessThan0.IN29
pwmfre[4] => LessThan0.IN28
pwmfre[5] => LessThan0.IN27
pwmfre[6] => LessThan0.IN26
pwmfre[7] => LessThan0.IN25
pwmfre[8] => LessThan0.IN24
pwmfre[9] => LessThan0.IN23
pwmfre[10] => LessThan0.IN22
pwmfre[11] => LessThan0.IN21
pwmfre[12] => LessThan0.IN20
pwmfre[13] => LessThan0.IN19
pwmfre[14] => LessThan0.IN18
pwmfre[15] => LessThan0.IN17
pwmfre[16] => LessThan0.IN16
pwmfre[17] => LessThan0.IN15
pwmfre[18] => LessThan0.IN14
pwmfre[19] => LessThan0.IN13
pwmfre[20] => LessThan0.IN12
pwmfre[21] => LessThan0.IN11
pwmfre[22] => LessThan0.IN10
pwmfre[23] => LessThan0.IN9
pwmfre[24] => LessThan0.IN8
pwmfre[25] => LessThan0.IN7
pwmfre[26] => LessThan0.IN6
pwmfre[27] => LessThan0.IN5
pwmfre[28] => LessThan0.IN4
pwmfre[29] => LessThan0.IN3
pwmfre[30] => LessThan0.IN2
pwmfre[31] => LessThan0.IN1
dutyratio[0] => LessThan1.IN32
dutyratio[1] => LessThan1.IN31
dutyratio[2] => LessThan1.IN30
dutyratio[3] => LessThan1.IN29
dutyratio[4] => LessThan1.IN28
dutyratio[5] => LessThan1.IN27
dutyratio[6] => LessThan1.IN26
dutyratio[7] => LessThan1.IN25
dutyratio[8] => LessThan1.IN24
dutyratio[9] => LessThan1.IN23
dutyratio[10] => LessThan1.IN22
dutyratio[11] => LessThan1.IN21
dutyratio[12] => LessThan1.IN20
dutyratio[13] => LessThan1.IN19
dutyratio[14] => LessThan1.IN18
dutyratio[15] => LessThan1.IN17
dutyratio[16] => LessThan1.IN16
dutyratio[17] => LessThan1.IN15
dutyratio[18] => LessThan1.IN14
dutyratio[19] => LessThan1.IN13
dutyratio[20] => LessThan1.IN12
dutyratio[21] => LessThan1.IN11
dutyratio[22] => LessThan1.IN10
dutyratio[23] => LessThan1.IN9
dutyratio[24] => LessThan1.IN8
dutyratio[25] => LessThan1.IN7
dutyratio[26] => LessThan1.IN6
dutyratio[27] => LessThan1.IN5
dutyratio[28] => LessThan1.IN4
dutyratio[29] => LessThan1.IN3
dutyratio[30] => LessThan1.IN2
dutyratio[31] => LessThan1.IN1


|top|spi_ctrl_reduced:spi_ctrl_reduced_instance
clk => rst_count[0].CLK
clk => rst_count[1].CLK
clk => rst_count[2].CLK
clk => rst_count[3].CLK
clk => rst_count[4].CLK
clk => rst_count[5].CLK
clk => rst_count[6].CLK
clk => rst_count[7].CLK
clk => rst_flag.CLK
clk => cs_n~reg0.CLK
clk => spi_clk.CLK
clk => clk_count[0].CLK
clk => clk_count[1].CLK
clk => clk_count[2].CLK
clk => clk_count[3].CLK
clk => clk_count[4].CLK
clk => clk_count[5].CLK
clk => clk_count[6].CLK
clk => clk_count[7].CLK
rst_n => rst_count[0].ACLR
rst_n => rst_count[1].ACLR
rst_n => rst_count[2].ACLR
rst_n => rst_count[3].ACLR
rst_n => rst_count[4].ACLR
rst_n => rst_count[5].ACLR
rst_n => rst_count[6].ACLR
rst_n => rst_count[7].ACLR
rst_n => rst_flag.ACLR
rst_n => cs_n~reg0.PRESET
rst_n => spi_clk.ACLR
rst_n => clk_count[0].ACLR
rst_n => clk_count[1].ACLR
rst_n => clk_count[2].ACLR
rst_n => clk_count[3].ACLR
rst_n => clk_count[4].ACLR
rst_n => clk_count[5].ACLR
rst_n => clk_count[6].ACLR
rst_n => clk_count[7].ACLR
sck <= spi_master_reduced:spi_master_reduced_instance.spi_clk
mosi <= spi_master_reduced:spi_master_reduced_instance.spi_mosi
miso => miso.IN1
cs_n <= cs_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
spi_tx_en => spi_tx_en.IN1
spi_rx_en => spi_rx_en.IN1
mode_select => mode_select.IN1
receive_status <= spi_master_reduced:spi_master_reduced_instance.receive_status


|top|spi_ctrl_reduced:spi_ctrl_reduced_instance|spi_master_reduced:spi_master_reduced_instance
clk => spi_mosir1.CLK
clk => spi_mosir.CLK
clk => spi_clkr.CLK
clk => spi_tx_db[0].CLK
clk => spi_tx_db[1].CLK
clk => spi_tx_db[2].CLK
clk => spi_tx_db[3].CLK
clk => spi_tx_db[4].CLK
clk => spi_tx_db[5].CLK
clk => spi_tx_db[6].CLK
clk => spi_tx_db[7].CLK
clk => data_count[0].CLK
clk => data_count[1].CLK
clk => data_count[2].CLK
clk => data_count[3].CLK
clk => data_count[4].CLK
clk => data_count[5].CLK
clk => data_count[6].CLK
clk => data_count[7].CLK
clk => cnt8[0].CLK
clk => cnt8[1].CLK
clk => cnt8[2].CLK
clk => cnt8[3].CLK
clk => cnt8[4].CLK
rst_n => spi_tx_db[0].ACLR
rst_n => spi_tx_db[1].ACLR
rst_n => spi_tx_db[2].ACLR
rst_n => spi_tx_db[3].ACLR
rst_n => spi_tx_db[4].ACLR
rst_n => spi_tx_db[5].ACLR
rst_n => spi_tx_db[6].ACLR
rst_n => spi_tx_db[7].ACLR
rst_n => data_count[0].ACLR
rst_n => data_count[1].ACLR
rst_n => data_count[2].ACLR
rst_n => data_count[3].ACLR
rst_n => data_count[4].ACLR
rst_n => data_count[5].ACLR
rst_n => data_count[6].ACLR
rst_n => data_count[7].ACLR
rst_n => cnt8[0].ACLR
rst_n => cnt8[1].ACLR
rst_n => cnt8[2].ACLR
rst_n => cnt8[3].ACLR
rst_n => cnt8[4].ACLR
rst_n => spi_clkr.ALOAD
rst_n => spi_mosir1.PRESET
rst_n => spi_mosir.PRESET
spi_miso => ~NO_FANOUT~
spi_mosi <= spi_mosi.DB_MAX_OUTPUT_PORT_TYPE
spi_clk <= spi_clkr.DB_MAX_OUTPUT_PORT_TYPE
spi_tx_en => always0.IN0
spi_tx_en => always0.IN0
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_tx_db.OUTPUTSELECT
spi_tx_en => spi_mosir.OUTPUTSELECT
spi_tx_en => spi_mosir1.OUTPUTSELECT
spi_rx_en => always0.IN1
spi_rx_en => always0.IN1
spi_over <= <GND>
mode_select => spi_mosi.OUTPUTSELECT
mode_select => spi_clkr.ADATA
mode_select => LessThan2.IN9
mode_select => LessThan2.IN10
mode_select => LessThan1.IN10
receive_status <= <GND>


|top|i2c_slave_reduced:i2c_slave_reduced_instance
reset_n => reset_n.IN1
sda <> sda
scl => scl.IN1
clock => clk.CLK
clock => clk_count[0].CLK
clock => clk_count[1].CLK
clock => clk_count[2].CLK
clock => clk_count[3].CLK
led <= i2c_slave_op_reduced:i2c_slave_op_reduced_inst.led


|top|i2c_slave_reduced:i2c_slave_reduced_instance|i2c_slave_op_reduced:i2c_slave_op_reduced_inst
reset_n => sda_last_r.OUTPUTSELECT
reset_n => sda_out_r.PRESET
reset_n => addressed.ACLR
reset_n => data_reg[0].ACLR
reset_n => data_reg[1].ACLR
reset_n => data_reg[2].ACLR
reset_n => data_reg[3].ACLR
reset_n => data_reg[4].ACLR
reset_n => data_reg[5].ACLR
reset_n => data_reg[6].ACLR
reset_n => data_reg[7].ACLR
reset_n => read_write_reg.PRESET
reset_n => sda_en_r.ACLR
reset_n => scl_reg.OUTPUTSELECT
reset_n => scl_reg.OUTPUTSELECT
reset_n => i2c_state~12.DATAIN
reset_n => main_state~3.DATAIN
clock => sda_out_r.CLK
clock => addressed.CLK
clock => data_reg[0].CLK
clock => data_reg[1].CLK
clock => data_reg[2].CLK
clock => data_reg[3].CLK
clock => data_reg[4].CLK
clock => data_reg[5].CLK
clock => data_reg[6].CLK
clock => data_reg[7].CLK
clock => read_write_reg.CLK
clock => sda_en_r.CLK
clock => sda_last_r.CLK
clock => scl_reg[0].CLK
clock => scl_reg[1].CLK
clock => i2c_state~10.DATAIN
clock => main_state~1.DATAIN
sda_out <= sda_out_r.DB_MAX_OUTPUT_PORT_TYPE
sda_in => sda_risingedge.IN1
sda_in => sda_last_r.DATAB
sda_in => read_write_reg.DATAB
sda_in => sda_fallingedge.IN1
sda_en <= sda_en_r.DB_MAX_OUTPUT_PORT_TYPE
scl => scl_reg.DATAA
scl => start_bus_wire.IN1
scl => stop_bus_wire.IN1
scl => led.DATAIN
led <= scl.DB_MAX_OUTPUT_PORT_TYPE


|top|I2C_MASTER_reduced:I2C_MASTER_reduced_instance
clk => clk.IN1
rst_n => rst_n.IN1
sda <> sda
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
RD_EN => RD.OUTPUTSELECT
RD_EN => read_status_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => data_reg.OUTPUTSELECT
RD_EN => WR.OUTPUTSELECT
RD_EN => write_status_reg.ENA
WR_EN => WR.OUTPUTSELECT
WR_EN => write_status_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => data_reg.OUTPUTSELECT
WR_EN => RD.OUTPUTSELECT
WR_EN => read_status_reg.OUTPUTSELECT
WR_EN => data[0].OE
WR_EN => data[1].OE
WR_EN => data[2].OE
WR_EN => data[3].OE
WR_EN => data[4].OE
WR_EN => data[5].OE
WR_EN => data[6].OE
WR_EN => data[7].OE
receive_status <= I2C_wr_reduced:I2C_wr_reduced_instance.debug


|top|I2C_MASTER_reduced:I2C_MASTER_reduced_instance|I2C_wr_reduced:I2C_wr_reduced_instance
sda_in => ack_status.DATAB
sda_out <= sda_out.DB_MAX_OUTPUT_PORT_TYPE
sda_en <= sda_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
ack_status <= ack_status~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset_n => addr_reg[0].ACLR
reset_n => addr_reg[1].PRESET
reset_n => addr_reg[2].PRESET
reset_n => addr_reg[3].PRESET
reset_n => addr_reg[4].PRESET
reset_n => addr_reg[5].PRESET
reset_n => addr_reg[6].PRESET
reset_n => delay_reg[0].ACLR
reset_n => delay_reg[1].ACLR
reset_n => delay_reg[2].ACLR
reset_n => delay_reg[3].ACLR
reset_n => delay_reg[4].ACLR
reset_n => delay_reg[5].ACLR
reset_n => delay_reg[6].ACLR
reset_n => delay_reg[7].ACLR
reset_n => control_phase.PRESET
reset_n => main_state[0]~reg0.ACLR
reset_n => main_state[1]~reg0.ACLR
reset_n => main_state[2]~reg0.ACLR
reset_n => main_state[3]~reg0.ACLR
reset_n => op_flag.ACLR
reset_n => addressed.ACLR
reset_n => sda_w.PRESET
reset_n => sda_en~reg0.ACLR
reset_n => i2c_state[0]~reg0.ACLR
reset_n => i2c_state[1]~reg0.ACLR
reset_n => i2c_state[2]~reg0.ACLR
reset_n => i2c_state[3]~reg0.ACLR
reset_n => i2c_state[4]~reg0.ACLR
reset_n => ack_status~reg0.PRESET
reset_n => clk_div[0].ACLR
reset_n => clk_div[1].ACLR
reset_n => clk_div[2].ACLR
reset_n => clk_div[3].ACLR
reset_n => clk_div[4].ACLR
reset_n => clk_div[5].ACLR
reset_n => clk_div[6].ACLR
reset_n => clk_div[7].ACLR
reset_n => scl~en.ACLR
reset_n => curr.OUTPUTSELECT
reset_n => last.OUTPUTSELECT
reset_n => sda_c.PRESET
reset_n => stop_reg.ACLR
reset_n => control_flag.ACLR
reset_n => start_reg.ACLR
reset_n => data_reg[0].ENA
reset_n => data_reg[7].ENA
reset_n => data_reg[6].ENA
reset_n => data_reg[5].ENA
reset_n => data_reg[4].ENA
reset_n => data_reg[3].ENA
reset_n => data_reg[2].ENA
reset_n => data_reg[1].ENA
clock => data_reg[0].CLK
clock => data_reg[1].CLK
clock => data_reg[2].CLK
clock => data_reg[3].CLK
clock => data_reg[4].CLK
clock => data_reg[5].CLK
clock => data_reg[6].CLK
clock => data_reg[7].CLK
clock => op_flag.CLK
clock => addressed.CLK
clock => sda_w.CLK
clock => sda_en~reg0.CLK
clock => i2c_state[0]~reg0.CLK
clock => i2c_state[1]~reg0.CLK
clock => i2c_state[2]~reg0.CLK
clock => i2c_state[3]~reg0.CLK
clock => i2c_state[4]~reg0.CLK
clock => ack_status~reg0.CLK
clock => addr_reg[0].CLK
clock => addr_reg[1].CLK
clock => addr_reg[2].CLK
clock => addr_reg[3].CLK
clock => addr_reg[4].CLK
clock => addr_reg[5].CLK
clock => addr_reg[6].CLK
clock => delay_reg[0].CLK
clock => delay_reg[1].CLK
clock => delay_reg[2].CLK
clock => delay_reg[3].CLK
clock => delay_reg[4].CLK
clock => delay_reg[5].CLK
clock => delay_reg[6].CLK
clock => delay_reg[7].CLK
clock => control_phase.CLK
clock => main_state[0]~reg0.CLK
clock => main_state[1]~reg0.CLK
clock => main_state[2]~reg0.CLK
clock => main_state[3]~reg0.CLK
clock => sda_c.CLK
clock => stop_reg.CLK
clock => control_flag.CLK
clock => start_reg.CLK
clock => last.CLK
clock => curr.CLK
clock => clk_div[0].CLK
clock => clk_div[1].CLK
clock => clk_div[2].CLK
clock => clk_div[3].CLK
clock => clk_div[4].CLK
clock => clk_div[5].CLK
clock => clk_div[6].CLK
clock => clk_div[7].CLK
clock => scl~reg0.CLK
clock => scl~en.CLK
WR => always3.IN0
WR => always3.IN1
WR => control_phase.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => always3.IN1
WR => main_state.OUTPUTSELECT
WR => control_phase.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => delay_reg.OUTPUTSELECT
WR => sda_w.OUTPUTSELECT
WR => sda_en.DATAB
WR => main_state.DATAA
WR => main_state.DATAA
WR => sda_w.DATAB
RD => always3.IN1
RD => always3.IN1
RD => main_state.OUTPUTSELECT
RD => control_phase.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => control_phase.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => delay_reg.OUTPUTSELECT
RD => Mux2.IN15
RD => main_state.DATAA
data[0] => data_reg.DATAB
data[0] => data_reg.DATAB
data[1] => data_reg.DATAB
data[1] => data_reg.DATAB
data[2] => data_reg.DATAB
data[2] => data_reg.DATAB
data[3] => data_reg.DATAB
data[3] => data_reg.DATAB
data[4] => data_reg.DATAB
data[4] => data_reg.DATAB
data[5] => data_reg.DATAB
data[5] => data_reg.DATAB
data[6] => data_reg.DATAB
data[6] => data_reg.DATAB
data[7] => data_reg.DATAB
data[7] => data_reg.DATAB
scl_fallingedge <= scl_fallingedge.DB_MAX_OUTPUT_PORT_TYPE
main_state[0] <= main_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
main_state[1] <= main_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
main_state[2] <= main_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
main_state[3] <= main_state[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_state[0] <= i2c_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_state[1] <= i2c_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_state[2] <= i2c_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_state[3] <= i2c_state[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_state[4] <= i2c_state[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debug <= sda_out.DB_MAX_OUTPUT_PORT_TYPE


